version: '3'

services:
  web:    
    build: .
    restart: unless-stopped
    depends_on:      
      - web_ruby 
    networks:
      - backend-tier
    ports:      
      - 80:80

  web_ruby: 
    build: ./vote 
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - backend-tier
    depends_on:
      - db
    volumes:
      - ./vote:/vote
      - ./vote:/root  

  authentication:
    ports:
      - 4000:4000
    build: ./api_auth
    restart: unless-stopped
    networks:
      - backend-tier
    environment:
      MIX_ENV: dev
    env_file: 
      - .env
    volumes:
      - ./api_auth:/api_auth
      - ./api_auth:/root
    depends_on:
      - db

  db:
    image: library/postgres:11.1-alpine
    environment:
      PGDATA: /home/adrielradicchi/Projects/DataBase/PostgreSQL/
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432
    restart: unless-stopped
    networks:
      - backend-tier
    volumes:
      - postgres:/home/adrielradicchi/Projects/DataBase/PostgreSQL/

  test_authentication:
    image: km_online_authentication
    command: mix test
    environment:
      - MIX_ENV=test
    volumes:
      - ./api_auth:/api_auth
      - ./api_auth:/root
    networks:
      - backend-tier
    depends_on:
      - db
  
volumes:
  postgres:
    driver: local

networks:
  backend-tier:
    driver: bridge