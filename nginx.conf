server {
    listen 80 default_server;
    server_name  blog.*;
    root   /var/www//public;
    index  index.html;

    location ~ /\. {
      deny all;
    }

    location ~* ^.+\.(rb|log)$ {
       deny all;
    }

    # serve static (compiled) assets directly if they exist (for rails production)
    location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
      try_files $uri @rails;
      access_log off;
      gzip_static on;
      # to serve pre-gzipped version
      expires max;
      add_header Cache-Control public;

      add_header Last-Modified "";
      add_header ETag "";
      break;
    }

    location / {
       try_files $uri @rails;
    }

    # location /api {
    #    try_files $uri @phoenix;
    # }  

    location @rails {
        resolver 127.0.0.11 ipv6=off;

        set $target http://web_ruby:3000;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
        proxy_ssl_session_reuse off;
        proxy_pass $target;
        # limit_req zone=one;
        access_log /var/www/text-smasher/log/nginx.access.log;
        error_log /var/www/text-smasher/log/nginx.error.log;
    }

    # location @phoenix {
    #     resolver 127.0.0.11 ipv6=off;

    #     set $target http://authentication:4000 max_fails=5 fail_timeout=60s;
    #     allow all
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_redirect off;
    #     proxy_pass $target;
    # }
}